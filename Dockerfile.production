# escape=\

ARG EREADER_VERSION
ARG NVM_VERSION=v0.40.3

FROM bitnami/minideb:bookworm AS base

ARG NVM_VERSION

SHELL [ "/bin/bash", "-c" ]

# Force bash as OCI doesn't contain SHELL, so not in Podman https://docs.podman.io/en/latest/markdown/podman-build.1.html#format
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

RUN \
  # nounset - Treat unset variables as an error when substituting
  # xtrace - Print commands and their arguments as they are executed
  set -o nounset -o xtrace && \
  # Prepare for nvm
  install_packages ca-certificates curl && \
  # user setup
  useradd --create-home --user-group --shell /bin/bash developer && \
  mkdir /app && \
  chown developer:developer /app

# npm < 9 changes user running process to match folder https://github.com/npm/cli/issues/4589
USER developer

WORKDIR /home/developer

COPY .nvmrc ./

RUN \
  # nounset - Treat unset variables as an error when substituting
  # xtrace - Print commands and their arguments as they are executed
  set -o nounset -o xtrace && \
  # Install nodejs
  bash -c "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/${NVM_VERSION}/install.sh | bash" && \
  source ~/.bashrc && \
  # "source ~/.nvm/nvm.sh" fails if nodejs isn't installed, like when it will be used to install nodejs
  source ~/.nvm/nvm.sh || nvm install --default --latest-npm

# Separate step is not needed now, but will be when there is a build phase
FROM base AS build

USER developer
WORKDIR /app

COPY package.json package-lock.json ./

RUN \
  # nounset - Treat unset variables as an error when substituting
  # xtrace - Print commands and their arguments as they are executed
  set -o nounset -o xtrace && \
  # Install production dependencies
  source ~/.nvm/nvm.sh && \
  npm clean-install --omit=dev

FROM base

USER developer
WORKDIR /app

ARG AUTHOR
ARG DATETIMENOW
ARG EREADER_VERSION
ARG REVISION

# https://github.com/opencontainers/image-spec/blob/main/annotations.md
LABEL org.opencontainers.image.authors=${AUTHOR} \
  org.opencontainers.image.created=${DATETIMENOW} \
  org.opencontainers.image.source="https://github.com/biblemesh/toad-reader-server" \
  org.opencontainers.image.revision=${REVISION:-unspecified} \
  org.opencontainers.image.title="biblemesh/toad-reader-server" \
  org.opencontainers.image.vendor="BI Ltd" \
  org.opencontainers.image.version=${EREADER_VERSION}

COPY --from=build /app/node_modules ./node_modules/
COPY app.js crons.js healthcheck.js package.json package-lock.json ./
COPY crons ./crons/
COPY scripts ./scripts/
COPY src ./src/
COPY translations ./translations/

HEALTHCHECK --interval=60s --timeout=10s --start-period=10s \
  CMD "source ~/.nvm/nvm.sh && npm start run health-check"

CMD "source ~/.nvm/nvm.sh && npm start"
